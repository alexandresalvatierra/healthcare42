version: "3.7"

services:
  shift-api-app:
    build: ./services/shift
    entrypoint: ./.docker/entrypoint.sh
    container_name: node-shift-api-app
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - ${APP_SHIFT_API_PORT}:${APP_SHIFT_API_PORT}
    volumes:
      - ./services/shift:/home/node/shift
    depends_on:
      postgres-db:
        condition: service_started
    networks: 
      - healthcare-net

  nurse-api-app:
    build: ./services/nurse
    entrypoint: ./.docker/entrypoint.sh
    container_name: node-nurse-api-app
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - ${APP_NURSE_API_PORT}:${APP_NURSE_API_PORT}
    volumes:
      - ./services/nurse:/home/node/nurse
    depends_on:
      postgres-db:
        condition: service_started
    networks: 
      - healthcare-net

  shift-front-app:
    build: ./front
    container_name: react-shift-front-app
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - ${APP_SHIFT_FRONT_PORT}:${APP_SHIFT_FRONT_PORT}
    volumes:
      - ./front/public:/home/react/app/public
      - ./front/src:/home/react/app/src
    networks: 
    - healthcare-net
  
  postgres-db:
    image: postgres:13.14-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${DB_POSTGRES_USER}
      - POSTGRES_DB=${API_GATEWAY_KONG_DB_NAME}
      - POSTGRES_PASSWORD=${DB_POSTGRES_PASS}
    ports:
      - ${DB_POSTGRES_PORT}:${DB_POSTGRES_PORT}
    volumes:
      - ./bin/setup-databases.sh:/docker-entrypoint-initdb.d/setup-databases.sh
    command: >
      /bin/bash -c "
      chmod +x /docker-entrypoint-initdb.d/setup-databases.sh
      /docker-entrypoint-initdb.d/setup-databases.sh && docker-entrypoint.sh postgres"
    networks: 
      - healthcare-net

  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASS}
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
       - ./bin/pgadmin-config.json:/pgadmin4/servers.json
       - ./pgpass:/pgpass
    depends_on:
      - postgres-db
    networks: 
      - healthcare-net

  kong-database:
    image: postgres:9.6
    container_name: kong-database
    environment:
      - POSTGRES_USER=${API_GATEWAY_KONG_DB_USER}
      - POSTGRES_DB=${API_GATEWAY_KONG_DB_NAME}
      - POSTGRES_PASSWORD=${API_GATEWAY_KONG_DB_PASS}
    ports:
      - ${API_GATEWAY_KONG_DB_PORT}:${API_GATEWAY_KONG_DB_PORT}
    volumes:
      - "db-data-kong-postgres:/var/lib/postgresql/data"
    networks: 
      - healthcare-net

  kong-migrations:
    image: kong
    environment:
      - KONG_DATABASE=${API_GATEWAY_KONG_DB_TYPE}
      - KONG_PG_HOST=${API_GATEWAY_KONG_DB_HOST}
      - KONG_PG_PASSWORD=${API_GATEWAY_KONG_DB_PASS}
      - KONG_CASSANDRA_CONTACT_POINTS=${API_GATEWAY_KONG_DB_HOST}
    command: ${API_GATEWAY_KONG_DB_USER} migrations bootstrap
    restart: on-failure
    depends_on:
      - kong-database
    networks: 
      - healthcare-net

  kong:
    image: kong
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=${API_GATEWAY_KONG_DB_TYPE}
      - KONG_PG_HOST=${API_GATEWAY_KONG_DB_HOST}
      - KONG_PG_USER=${API_GATEWAY_KONG_DB_USER}
      - KONG_PG_PASSWORD=${API_GATEWAY_KONG_DB_PASS}
      - KONG_CASSANDRA_CONTACT_POINTS=${API_GATEWAY_KONG_DB_HOST}
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: on-failure
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-database:kong-database
    depends_on:
      - kong-migrations
    networks: 
      - healthcare-net
  
  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    environment:
      - NODE_ENV=production
    networks: 
      - healthcare-net

  kong-configurator:
    build: .
    depends_on:
      - kong
    command: /bin/sh -c "setup-kong.sh"
    networks: 
      - healthcare-net

volumes:
  db-data-kong-postgres:

networks:
  healthcare-net:
    driver: bridge